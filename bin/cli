#!/usr/bin/env node

const program = require('commander');
const _ = require('lodash');
const chalk = require('chalk');
const pkg = require('../package.json');
const commands = require('../config/commands');

program
  .version(pkg.version)
  .usage('<command> [options]'.green);

const argvs = Array.prototype.slice.call(process.argv, 2);
const isCommands = _.intersection(_.map(commands, 'name'), argvs).length !== 0;
const examples = _.map(commands, 'examples');

for (const opt of commands) {
  const cmd = program
    .command(opt.name, '', _.pick(opt, 'isDefault'))
    .description(chalk.yellow(opt.description));

  (opt.options || []).forEach(o => {
    cmd.option(o.name, o.description, o.defaultValue);
  });

  cmd.action(() => {
    doCommand(argvs, cmd);
  });
}

if (!process.argv.slice(2).length) {
  program.help();
}

program.addHelpText('after', `
Examples:
  $ ${examples.join('\n  $ ')}
`);

program.parse(process.argv);

async function doCommand(argvs, cmd) {
  const [com] = argvs;
  const { args } = cmd;

  if (isCommands) {
    await require(`../src/${com}`)(args, cmd.opts());
  } else {
    await require('../src/organize')(args, cmd.opts());
  }
}
